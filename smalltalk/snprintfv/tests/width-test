#! /bin/sh
# width-test --- test * and *n$ specifier width parameters
# Copyright (C) 2001 Gary V. Vaughan
# Originally by Gary V. Vaughan <gary@gnu.org>, 2001
# This file is part of Snprintfv.
#
# Snprintfv is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Snprintfv is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program that also links with and
# uses the libopts library from AutoGen, you may include it under
# the same distribution terms used by the libopts library.

# Common definitions
if test -z "$srcdir"; then
    srcdir=`echo "$0" | sed 's,[^/]*$,,'`
    test "$srcdir" = "$0" && srcdir=.
    test -z "$srcdir" && srcdir=.
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs

# this is the output we should expect to see
cat <<\EOF >ok
1   string
*** printfv returned 10 chars.
2 string  
*** printfv returned 10 chars.
3   string
*** printfv returned 10 chars.
4 string  
*** printfv returned 10 chars.
5   string
*** printfv returned 10 chars.
6 string  
*** printfv returned 10 chars.
7   string
*** printfv returned 10 chars.
8 string  
*** printfv returned 10 chars.
9   string
*** printfv returned 10 chars.
10 string  
*** printfv returned 11 chars.
11   string
*** printfv returned 11 chars.
12 string  
*** printfv returned 11 chars.
13 00string
*** printfv returned 11 chars.
14 string  
*** printfv returned 11 chars.
15 00string
*** printfv returned 11 chars.
16 string  
*** printfv returned 11 chars.
EOF

cat <<\EOF >errok
EOF

# basic tests
$SNPRINTFV '1 %8s' string 2> err | tee -i out >&2
$SNPRINTFV '2 %-8s' string 2>> err | tee -ai out >&2
$SNPRINTFV '3 %2$8s' dummy string 2>> err | tee -ai out >&2
$SNPRINTFV '4 %2$-8s' dummy string 2>> err | tee -ai out >&2

# try * width parameters
$SNPRINTFV '5 %*s' 8 string 2>> err | tee -ai out >&2
$SNPRINTFV '6 %*s' -8 string 2>> err | tee -ai out >&2
$SNPRINTFV '7 %3$*s' 8 dummy string 2>> err | tee -ai out >&2
$SNPRINTFV '8 %3$*s' -8 dummy string 2>> err | tee -ai out >&2

# try *n$ width parameters
$SNPRINTFV '9 %*2$s' string 8 2>> err | tee -ai out >&2
$SNPRINTFV '10 %*2$s' string -8 2>> err | tee -ai out >&2
$SNPRINTFV '11 %3$*1$s' 8 dummy string 2>> err | tee -ai out >&2
$SNPRINTFV '12 %3$*1$s' -8 dummy string 2>> err | tee -ai out >&2

# ensure we never try to left pad with 0
$SNPRINTFV '13 %08s' string 2>> err | tee -ai out >&2
$SNPRINTFV '14 %-08s' string 2>> err | tee -ai out >&2
$SNPRINTFV '15 %3$0*1$s' 8 dummy string 2>> err | tee -ai out >&2
$SNPRINTFV '16 %3$0*1$s' -8 dummy string 2>> err | tee -ai out >&2


# Test against expected output
if ${CMP} -s out ok; then
    :
else
    echo "ok:" >&2
    cat ok >&2
    exit 1
fi

# Munge error output to remove leading directories, `lt-' or trailing `.exe'
sed -e "s,^[^:]*[lt-]*snprintfv-test[.ex]*:,snprintfv-test:," err >sederr \
    && mv sederr err

# Show stderr if doesn't match expected output if VERBOSE == 1
if "$CMP" -s err errok; then
    :
else
    echo "err:" >&2
    cat err >&2
    echo "errok:" >&2
    cat errok >&2
    exit 1
fi

# width-test ends here

