"======================================================================
|
|   Java run-time support.  gnu.java.net.PlainSocketImpl native methods.
|
|
 ======================================================================"


"======================================================================
|
| Copyright 2003 Free Software Foundation, Inc.
| Written by Paolo Bonzini.
|
| This file is part of GNU Smalltalk.
|
| The GNU Smalltalk class library is free software; you can redistribute it
| and/or modify it under the terms of the GNU General Public License
| as published by the Free Software Foundation; either version 2, or (at
| your option) any later version.
| 
| The GNU Smalltalk class library is distributed in the hope that it will be
| useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
| Public License for more details.
| 
| You should have received a copy of the GNU Lesser General Public License
| along with the GNU Smalltalk class library; see the file COPYING.  If not,
| write to the Free Software Foundation, 51 Franklin Street, Fifth Floor,
| Boston, MA 02110-1301, USA.  
|
 ======================================================================"


!JavaVM methodsFor: 'gnu.java.net.PlainSocketImpl'!

gnu_java_net_PlainSocketImpl_setOption_int: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'setOption(ILjava/lang/Object;)V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_getOption_int: arg1
    <javaNativeMethod: #'getOption(I)Ljava/lang/Object;'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_shutdownInput
    <javaNativeMethod: #'shutdownInput()V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_shutdownOutput
    <javaNativeMethod: #'shutdownOutput()V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_create_boolean: arg1
    <javaNativeMethod: #'create(Z)V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_connect_java_net_SocketAddress: arg1 int: arg2
    <javaNativeMethod: #'connect(Ljava/net/SocketAddress;I)V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_bind_java_net_InetAddress: arg1 int: arg2
    <javaNativeMethod: #'bind(Ljava/net/InetAddress;I)V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_listen_int: arg1
    <javaNativeMethod: #'listen(I)V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_accept_gnu_java_net_PlainSocketImpl: arg1
    <javaNativeMethod: #'accept(Lgnu/java/net/PlainSocketImpl;)V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_available
    <javaNativeMethod: #'available()I'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_close
    <javaNativeMethod: #'close()V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
!

gnu_java_net_PlainSocketImpl_sendUrgentData_int: arg1
    <javaNativeMethod: #'sendUrgentData(I)V'
        for: #{Java.gnu.java.net.PlainSocketImpl} static: false>
    self notYetImplemented
! !
