"======================================================================
|
|   Java run-time support.  java.lang.reflect.Field native methods.
|
|
 ======================================================================"


"======================================================================
|
| Copyright 2003 Free Software Foundation, Inc.
| Written by Paolo Bonzini.
|
| This file is part of GNU Smalltalk.
|
| The GNU Smalltalk class library is free software; you can redistribute it
| and/or modify it under the terms of the GNU General Public License
| as published by the Free Software Foundation; either version 2, or (at
| your option) any later version.
| 
| The GNU Smalltalk class library is distributed in the hope that it will be
| useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
| Public License for more details.
| 
| You should have received a copy of the GNU Lesser General Public License
| along with the GNU Smalltalk class library; see the file COPYING.  If not,
| write to the Free Software Foundation, 51 Franklin Street, Fifth Floor,
| Boston, MA 02110-1301, USA.  
|
 ======================================================================"


!JavaVM methodsFor: 'java.lang.reflect.Field'!

java_lang_reflect_Field_getName
    <javaNativeMethod: #'getName()Ljava/lang/String;'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getType
    <javaNativeMethod: #'getType()Ljava/lang/Class;'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getModifiers
    <javaNativeMethod: #'getModifiers()I'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getBoolean_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'getBoolean(Ljava/lang/Class;Ljava/lang/Object;)Z'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getChar_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'getChar(Ljava/lang/Class;Ljava/lang/Object;)C'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getByte_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'getByte(Ljava/lang/Class;Ljava/lang/Object;)B'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getShort_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'getShort(Ljava/lang/Class;Ljava/lang/Object;)S'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getInt_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'getInt(Ljava/lang/Class;Ljava/lang/Object;)I'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getLong_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'getLong(Ljava/lang/Class;Ljava/lang/Object;)J'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getFloat_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'getFloat(Ljava/lang/Class;Ljava/lang/Object;)F'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_getDouble_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'getDouble(Ljava/lang/Class;Ljava/lang/Object;)D'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_get_java_lang_Class: arg1 java_lang_Object: arg2
    <javaNativeMethod: #'get(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_setByte_java_lang_Class: arg1 java_lang_Object: arg2 byte: arg3
    <javaNativeMethod: #'setByte(Ljava/lang/Class;Ljava/lang/Object;B)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_setShort_java_lang_Class: arg1 java_lang_Object: arg2 short: arg3
    <javaNativeMethod: #'setShort(Ljava/lang/Class;Ljava/lang/Object;S)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_setInt_java_lang_Class: arg1 java_lang_Object: arg2 int: arg3
    <javaNativeMethod: #'setInt(Ljava/lang/Class;Ljava/lang/Object;I)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_setLong_java_lang_Class: arg1 java_lang_Object: arg2 long: arg3
    <javaNativeMethod: #'setLong(Ljava/lang/Class;Ljava/lang/Object;J)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_setFloat_java_lang_Class: arg1 java_lang_Object: arg2 float: arg3
    <javaNativeMethod: #'setFloat(Ljava/lang/Class;Ljava/lang/Object;F)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_setDouble_java_lang_Class: arg1 java_lang_Object: arg2 double: arg3
    <javaNativeMethod: #'setDouble(Ljava/lang/Class;Ljava/lang/Object;D)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_setChar_java_lang_Class: arg1 java_lang_Object: arg2 char: arg3
    <javaNativeMethod: #'setChar(Ljava/lang/Class;Ljava/lang/Object;C)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_setBoolean_java_lang_Class: arg1 java_lang_Object: arg2 boolean: arg3
    <javaNativeMethod: #'setBoolean(Ljava/lang/Class;Ljava/lang/Object;Z)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
!

java_lang_reflect_Field_set_java_lang_Class: arg1 java_lang_Object: arg2 java_lang_Object: arg3 java_lang_Class: arg4
    <javaNativeMethod: #'set(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)V'
        for: #{Java.java.lang.reflect.Field} static: false>
    self notYetImplemented
! !

