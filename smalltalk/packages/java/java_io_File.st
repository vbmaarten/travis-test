"======================================================================
|
|   Java run-time support.  java.io.File native methods.
|
|
 ======================================================================"


"======================================================================
|
| Copyright 2003 Free Software Foundation, Inc.
| Written by Paolo Bonzini.
|
| This file is part of GNU Smalltalk.
|
| The GNU Smalltalk class library is free software; you can redistribute it
| and/or modify it under the terms of the GNU General Public License
| as published by the Free Software Foundation; either version 2, or (at
| your option) any later version.
| 
| The GNU Smalltalk class library is distributed in the hope that it will be
| useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
| Public License for more details.
| 
| You should have received a copy of the GNU Lesser General Public License
| along with the GNU Smalltalk class library; see the file COPYING.  If not,
| write to the Free Software Foundation, 51 Franklin Street, Fifth Floor,
| Boston, MA 02110-1301, USA.  
|
 ======================================================================"


!JavaVM methodsFor: 'java.io.File'!

java_io_File_attr_int: arg1
    <javaNativeMethod: #'attr(I)J'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File__access_int: arg1
    <javaNativeMethod: #'_access(I)Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File__stat_int: arg1
    <javaNativeMethod: #'_stat(I)Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_init_native
    <javaNativeMethod: #'init_native()V'
        for: #{Java.java.io.File} static: true>
    self notYetImplemented
!

java_io_File_performCreate
    <javaNativeMethod: #'performCreate()Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_performDelete
    <javaNativeMethod: #'performDelete()Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_getCanonicalPath
    <javaNativeMethod: #'getCanonicalPath()Ljava/lang/String;'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_isAbsolute
    <javaNativeMethod: #'isAbsolute()Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_performList_java_io_FilenameFilter: arg1 java_io_FileFilter: arg2 java_lang_Class: arg3
    <javaNativeMethod: #'performList(Ljava/io/FilenameFilter;Ljava/io/FileFilter;Ljava/lang/Class;)[Ljava/lang/Object;'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_performMkdir
    <javaNativeMethod: #'performMkdir()Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_performSetReadOnly
    <javaNativeMethod: #'performSetReadOnly()Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_performListRoots
    <javaNativeMethod: #'performListRoots()[Ljava/io/File;'
        for: #{Java.java.io.File} static: true>
    self notYetImplemented
!

java_io_File_performRenameTo_java_io_File: arg1
    <javaNativeMethod: #'performRenameTo(Ljava/io/File;)Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
!

java_io_File_performSetLastModified_long: arg1
    <javaNativeMethod: #'performSetLastModified(J)Z'
        for: #{Java.java.io.File} static: false>
    self notYetImplemented
! !

