"======================================================================
|
|   Java run-time support.  java.util.zip.Deflater native methods.
|
|
 ======================================================================"


"======================================================================
|
| Copyright 2003 Free Software Foundation, Inc.
| Written by Paolo Bonzini.
|
| This file is part of GNU Smalltalk.
|
| The GNU Smalltalk class library is free software; you can redistribute it
| and/or modify it under the terms of the GNU General Public License
| as published by the Free Software Foundation; either version 2, or (at
| your option) any later version.
| 
| The GNU Smalltalk class library is distributed in the hope that it will be
| useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
| Public License for more details.
| 
| You should have received a copy of the GNU Lesser General Public License
| along with the GNU Smalltalk class library; see the file COPYING.  If not,
| write to the Free Software Foundation, 51 Franklin Street, Fifth Floor,
| Boston, MA 02110-1301, USA.  
|
 ======================================================================"


!JavaVM methodsFor: 'java.util.zip.Deflater'!

java_util_zip_Deflater_deflate_byteArray: arg1 int: arg2 int: arg3
    <javaNativeMethod: #'deflate([BII)I'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_init_int: arg1 boolean: arg2
    <javaNativeMethod: #'init(IZ)V'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_update
    <javaNativeMethod: #'update()V'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_end
    <javaNativeMethod: #'end()V'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_finish
    <javaNativeMethod: #'finish()V'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_getAdler
    <javaNativeMethod: #'getAdler()I'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_getTotalIn
    <javaNativeMethod: #'getTotalIn()I'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_getTotalOut
    <javaNativeMethod: #'getTotalOut()I'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_needsInput
    <javaNativeMethod: #'needsInput()Z'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_reset
    <javaNativeMethod: #'reset()V'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_setDictionary_byteArray: arg1 int: arg2 int: arg3
    <javaNativeMethod: #'setDictionary([BII)V'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
!

java_util_zip_Deflater_setInput_byteArray: arg1 int: arg2 int: arg3
    <javaNativeMethod: #'setInput([BII)V'
        for: #{Java.java.util.zip.Deflater} static: false>
    self notYetImplemented
! !

